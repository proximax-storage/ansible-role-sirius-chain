#------------------------------------------------
# Step 1: Create Sirius Chain Server directories
#------------------------------------------------
- name: Check if Sirius Chain block data directory exists
  stat:
    path: "{{ catapult_data_directory }}"
  register: data_directory

- name: Create Sirius Chain block data directory
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ catapult_user }}"
    group: "{{ catapult_group }}"
    recurse: yes
    mode: 0755
  when: not data_directory.stat.exists
  with_items:
  - "{{ catapult_data_directory }}"

- name: Check if Sirius Chain resources directory exists
  stat:
    path: "{{ catapult_config_directory }}/resources"
  register: resources_directory

- name: Create Sirius Chain directories
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ catapult_user }}"
    group: "{{ catapult_group }}"
    recurse: yes
    mode: 0744
  when: not resources_directory.stat.exists
  with_items:
  - "{{ catapult_config_directory }}/resources"

#------------------------------------------------
# Pull the Docker images from a Docker registry
#------------------------------------------------
- name: "Docker pull Sirius Chain Server image"
  docker_image:
    name: "{{ catapult_server_repository_name }}"
    tag: "{{ catapult_server_docker_tag }}"
    force_source: yes
    source: pull

- name: "Docker pull Sirius Chain REST image"
  docker_image:
    name: "{{ catapult_rest_repository_name }}"
    tag: "{{ catapult_rest_docker_tag }}"
    force_source: yes
    source: pull
  when: node_config['localnode_roles'] is defined and node_config['localnode_roles'] == "Api" #only download if node is Api

#------------------------------------------------
# Create scripts and configuration files from populated Jinja2 templates
#------------------------------------------------
- name: Generate Sirius Chain Server Configuration Files
  template:
    src: "{{ item }}.j2"
    dest: "{{ catapult_config_directory }}/resources/{{ item }}"
    owner: "{{ catapult_user }}"
    group: "{{ catapult_group }}"
    mode: u+r
  with_items: "{{sirius_chain_configs}}"

- name: Docker compose file for running Sirius Chain Server container
  template:
    src: "docker-compose.yml.j2"
    dest: "{{ catapult_config_directory }}/docker-compose.yml"
    owner: "{{ catapult_user }}"
    group: "{{ catapult_group }}"
    mode: u+r

- name: Copy entrypoint script
  template:
    src: "sc-p2p-entrypoint.sh.j2"
    dest: "{{ catapult_config_directory }}/sc-p2p-entrypoint.sh"
    owner: "{{ catapult_user }}"
    group: "{{ catapult_group }}"
    mode: u+x
  when: node_config['localnode_roles'] is not defined or node_config['localnode_roles'] != "Api"

#------------------------------------------------
# If running Catapult-Server API Mode
#------------------------------------------------
- name: Sirius Chain API Node - create directory for catapult-server API Node
  become: true
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ catapult_user }}"
    group: "{{ catapult_group }}"
    recurse: yes
    mode: 0744
  with_items:
  - "{{ catapult_rest_user_config }}"
  - "{{ mongodb_data_directory }}"
  - "{{ catapult_scripts_directory }}"
  - "{{ catapult_scripts_directory }}/mongo"
  when: node_config['localnode_roles'] is defined and node_config['localnode_roles'] == "Api"

- name: Sirius Chain API Node - copy the mongodb scripts
  copy:
    src: "{{ item }}"
    dest: "{{ catapult_scripts_directory }}/{{ item }}"
    owner: "{{ catapult_user }}"
    group: "{{ catapult_group }}"
    mode: 0644
  with_items:
  - "mongo/mongors.sh"
  - "mongo/mongoNamespaceDbPrepare.js"
  - "mongo/mongoMultisigDbPrepare.js"
  - "mongo/mongoDbPrepare.js"
  - "mongo/mongoDbDrop.js"
  - "mongo/mongoReputationDbPrepare.js"
  - "mongo/mongoContractDbPrepare.js"
  - "mongo/mongoLockInfoDbPrepare.js"
  - "mongo/mongoAccountPropertiesDbPrepare.js"
  - "mongo/mongoDeploy.bat"
  - "mongo/mongoMosaicDbPrepare.js"
  - "mongo/mongoDeploy.sh"
  - "mongo/mongoMetadataDbPrepare.js"
  - "mongo/mongoCatapultConfigDbPrepare.js"
  - "mongo/mongoCatapultUpgradeDbPrepare.js"

  when: node_config['localnode_roles'] is defined and node_config['localnode_roles'] == "Api"

- name: Sirius Chain API Node - generate Sirius Chain REST JSON configuration file
  template:
    src: "{{ item }}.j2"
    dest: "{{ catapult_rest_user_config }}/{{ item }}"
    owner: "{{ catapult_user }}"
    group: "{{ catapult_group }}"
    mode: u+r
  with_items:
  - rest.json
  when: node_config['localnode_roles'] is defined and node_config['localnode_roles'] == "Api"
